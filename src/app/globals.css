@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.141 0.005 285.823);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.141 0.005 285.823);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.141 0.005 285.823);
  --primary: oklch(0.21 0.006 285.885);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.967 0.001 286.375);
  --secondary-foreground: oklch(0.21 0.006 285.885);
  --muted: oklch(0.967 0.001 286.375);
  --muted-foreground: oklch(0.552 0.016 285.938);
  --accent: oklch(0.967 0.001 286.375);
  --accent-foreground: oklch(0.21 0.006 285.885);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.92 0.004 286.32);
  --input: oklch(0.92 0.004 286.32);
  --ring: oklch(0.705 0.015 286.067);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.141 0.005 285.823);
  --sidebar-primary: oklch(0.21 0.006 285.885);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.967 0.001 286.375);
  --sidebar-accent-foreground: oklch(0.21 0.006 285.885);
  --sidebar-border: oklch(0.92 0.004 286.32);
  --sidebar-ring: oklch(0.705 0.015 286.067);
}

.dark {
  --background: oklch(0.18 0.005 285.823);
  --foreground: oklch(0.98 0 0);
  --card: oklch(0.24 0.006 285.885);
  --card-foreground: oklch(0.98 0 0);
  --popover: oklch(0.24 0.006 285.885);
  --popover-foreground: oklch(0.98 0 0);
  --primary: oklch(0.88 0.004 286.32);
  --primary-foreground: oklch(0.18 0.006 285.885);
  --secondary: oklch(0.32 0.006 286.033);
  --secondary-foreground: oklch(0.98 0 0);
  --muted: oklch(0.32 0.006 286.033);
  --muted-foreground: oklch(0.65 0.015 286.067);
  --accent: oklch(0.32 0.006 286.033);
  --accent-foreground: oklch(0.98 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 12%);
  --input: oklch(1 0 0 / 18%);
  --ring: oklch(0.552 0.016 285.938);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.24 0.006 285.885);
  --sidebar-foreground: oklch(0.98 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.98 0 0);
  --sidebar-accent: oklch(0.32 0.006 286.033);
  --sidebar-accent-foreground: oklch(0.98 0 0);
  --sidebar-border: oklch(1 0 0 / 12%);
  --sidebar-ring: oklch(0.552 0.016 285.938);
}

/* 自定义动画和样式 */
@keyframes sparkle {
  0% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.05) rotate(180deg); }
  100% { transform: scale(1) rotate(360deg); }
}

.sparkle-animation {
  animation: sparkle 3s ease-in-out infinite;
}

/* 渐变背景 */
.gradient-bg {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary)) 100%);
}

/* 自定义滚动条 */
.custom-scrollbar::-webkit-scrollbar {
  width: 6px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: hsl(var(--muted));
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground));
  border-radius: 3px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary));
}

/* 代码高亮 */
.code-highlight {
  background: hsl(var(--muted));
  border: 1px solid hsl(var(--border));
  border-radius: 6px;
  padding: 1rem;
  font-family: 'Fira Code', 'Courier New', monospace;
  line-height: 1.5;
}

/* 组件预览卡片 */
.component-preview {
  position: relative;
  overflow: hidden;
  border-radius: 12px;
  border: 1px solid hsl(var(--border));
  background: hsl(var(--card));
  transition: all 0.3s ease;
}

.component-preview:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px -5px hsl(var(--primary) / 0.1);
}

/* 工具栏样式 */
.toolbar {
  background: hsl(var(--card) / 0.8);
  backdrop-filter: blur(20px);
  border: 1px solid hsl(var(--border));
  border-radius: 8px;
}

/* 输入框聚焦效果 */
.input-focus:focus {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
}

/* 按钮悬停效果 */
.button-hover:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px hsl(var(--primary) / 0.3);
}

/* 侧边栏样式 */
.sidebar {
  background: hsl(var(--card) / 0.5);
  backdrop-filter: blur(10px);
  border-right: 1px solid hsl(var(--border));
}

/* 画布区域 */
.canvas-area {
  background: 
    radial-gradient(circle at 25% 25%, hsl(var(--primary) / 0.05) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, hsl(var(--secondary) / 0.05) 0%, transparent 50%);
}

/* 文件树样式 */
.file-tree-item {
  border-radius: 6px;
  padding: 8px 12px;
  transition: all 0.2s ease;
  cursor: pointer;
}

.file-tree-item:hover {
  background: hsl(var(--accent));
  transform: translateX(2px);
}

.file-tree-item.active {
  background: hsl(var(--primary) / 0.1);
  color: hsl(var(--primary));
  border-left: 3px solid hsl(var(--primary));
}

/* 组件列表样式 */
.component-list-item {
  border-radius: 8px;
  padding: 12px;
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  transition: all 0.2s ease;
}

.component-list-item:hover {
  border-color: hsl(var(--primary));
  box-shadow: 0 2px 8px hsl(var(--primary) / 0.1);
}

/* 属性面板样式 */
.property-panel {
  background: hsl(var(--card) / 0.7);
  backdrop-filter: blur(15px);
}

/* 颜色选择器 */
.color-swatch {
  width: 40px;
  height: 40px;
  border-radius: 8px;
  border: 2px solid hsl(var(--border));
  cursor: pointer;
  transition: all 0.2s ease;
}

.color-swatch:hover {
  transform: scale(1.1);
  border-color: hsl(var(--primary));
}

/* 生成按钮样式 */
.generate-button {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary)) 100%);
  box-shadow: 0 4px 14px hsl(var(--primary) / 0.3);
  transition: all 0.3s ease;
}

.generate-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px hsl(var(--primary) / 0.4);
}

.generate-button:active {
  transform: translateY(0);
}

/* 加载动画 */
.loading-spinner {
  border: 2px solid hsl(var(--muted));
  border-top: 2px solid hsl(var(--primary));
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Layers 选中状态样式 */
.layer-item {
  transition: all 0.2s ease;
  cursor: pointer;
}

.layer-item:hover:not(.layer-selected) {
  background: hsl(var(--accent));
}

.layer-selected {
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.layer-selected-child {
  background: hsl(var(--primary) / 0.8);
  color: hsl(var(--primary-foreground));
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
